C51 COMPILER V9.54   KEYBOARD                                                              07/01/2016 12:06:20 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE KEYBOARD
OBJECT MODULE PLACED IN .\Objects\keyboard.obj
COMPILER INVOKED BY: E:\MDK\keil\keilmdk\C51\BIN\C51.EXE keyboard.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\keyboard.lst) TABS(2) OBJECT(.\Objects\keyboard.obj)

line level    source

   1          /*==================硬件电路===============================      
   2           *说明：对4*4矩阵键盘扫描，扫描方法为状态机方法+定时器中断
   3           *      数据口为P0，列线为P0.0-P0.3，行线为P0.4-P0.7
   4           *==========================================================*/
   5          
   6          #include "keyboard.h"
   7          
   8          /*==========================================================   
   9           *函数名称：Obtain_key(void)
  10           *功    能：对矩阵键盘进行扫描，扫描方式为状态机+定时器中断
  11           *入口参数：
  12           *出口参数：key_temp
  13           *说    明：获取某时刻的键值
  14           *==========================================================*/
  15          static unsigned char Obtain_key(void)
  16          {
  17   1        unsigned char key1;
  18   1        unsigned char key2;
  19   1        unsigned char key_temp;//暂时存放按键键值
  20   1        KEY=0xf0;
  21   1        key1=KEY;
  22   1        key1=KEY&0xf0;      //确定哪一列的按键按下
  23   1        KEY=0x0f;
  24   1        key2=KEY;
  25   1        key2=KEY&0x0f;      //确定哪一行的按键按下
  26   1        key_temp=key1|key2;   //确定按键位置
  27   1        return key_temp;
  28   1      }
  29          
  30          /*==========================================================   
  31           *函数名称：Scan_key(void)
  32           *功    能：获取真正的键值
  33           *入口参数：
  34           *出口参数：key_return
  35           *说    明：按键释放才能获取有效键值
  36           *==========================================================*/
  37          unsigned char Scan_key(void)
  38          {
  39   1        static unsigned char key_state =0; //按键状态
  40   1        static unsigned char key_prev  =0; //上一次按键
  41   1        unsigned char key_press =NO_KEY;   //按键真实键值
  42   1        unsigned char key_return =NO_KEY;
  43   1        
  44   1        key_press =Obtain_key();    //获取键值
  45   1        switch(key_state)
  46   1        {
  47   2          case 0:                    //状态0 按键初始状态，此时无按键按下
  48   2            if(key_press!=NO_KEY)    //有按键按下
  49   2            {
  50   3              key_state=1;           //转换为状态1 确认按键是否真的按下
  51   3              key_prev=key_press;    //保存按键状态       
  52   3            }
  53   2            break;
  54   2          case 1:                    //按键确认状态
C51 COMPILER V9.54   KEYBOARD                                                              07/01/2016 12:06:20 PAGE 2   

  55   2            if(key_press==key_prev)  //确认和上次按键相同
  56   2            {
  57   3              key_state=2;           //转换为状态2 判断按键释放
  58   3            }
  59   2            else                     //按键弹起，是抖动，不响应
  60   2            {
  61   3              key_state=0;           //转换为状态0
  62   3            }
  63   2            break;
  64   2          case 2:                    //按键释放状态
  65   2            if(key_press==NO_KEY)   //按键释放了
  66   2            {
  67   3              key_state=0;          //转换为状态0
  68   3              key_return =key_prev;
  69   3              break;
  70   3            }
  71   2          default :
  72   2            break;
  73   2        }
  74   1        return key_return;
  75   1      }
  76          
  77          /*==========================================================   
  78           *函数名称：Get_key(void)
  79           *功    能：对真正的键值进行处理
  80           *入口参数：
  81           *出口参数：key_value
  82           *说    明：
  83           *==========================================================*/
  84          unsigned char Get_key(void)
  85          {
  86   1        unsigned char key_acc;
  87   1        unsigned char key_value;
  88   1        key_acc=Scan_key();
  89   1        switch(key_acc)           //当确定按键按下后，列举所有的按键情况
  90   1                {
  91   2                   case 0xe7: key_value=0;break;
  92   2                   case 0xeb: key_value=1;break;
  93   2                   case 0xed: key_value=2;break;
  94   2                   case 0xee: key_value=3;break;
  95   2                   case 0xd7: key_value=4;break;
  96   2                   case 0xdb: key_value=5;break;
  97   2                   case 0xdd: key_value=6;break;
  98   2                   case 0xde: key_value=7;break;
  99   2                   case 0xb7: key_value=8;break;
 100   2                   case 0xbb: key_value=9;break;
 101   2                   case 0xbd: key_value=10;break;
 102   2                   case 0xbe: key_value=11;break;
 103   2                   case 0x77: key_value=12;break;
 104   2                   case 0x7b: key_value=13;break;
 105   2                   case 0x7d: key_value=14;break;
 106   2                   case 0x7e: key_value=15;break;
 107   2                   case 0xFF: key_value=255;break;//测试用 实际可删除
 108   2                   default :break;
 109   2                }
 110   1        return key_value;//返回键值
 111   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    225    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.54   KEYBOARD                                                              07/01/2016 12:06:20 PAGE 3   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
