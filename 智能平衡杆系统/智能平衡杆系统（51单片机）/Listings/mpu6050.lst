C51 COMPILER V9.54   MPU6050                                                               07/01/2016 12:06:19 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MPU6050
OBJECT MODULE PLACED IN .\Objects\mpu6050.obj
COMPILER INVOKED BY: E:\MDK\keil\keilmdk\C51\BIN\C51.EXE mpu6050.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\L
                    -istings\mpu6050.lst) TABS(2) OBJECT(.\Objects\mpu6050.obj)

line level    source

   1          /*==================硬件电路===============================      
   2           *说明：基于MPU6050的角度测量，SDA接P1^1，SCL接P1^0；
   3           *==========================================================*/
   4          
   5          #include "mpu6050.h"
   6          #include "iic.h"
   7          #include <math.h>    //Keil library  调用atan函数
   8          
   9          unsigned int  RunningTime=0;
  10          float xdata Gyro_x,Gyro_y,Gyro_z;//存储量化后的数据 单位 °/s
  11          float xdata Angle_x,Angle_y,Angle_z;//单位 g(9.8m/s^2)
  12          float xdata Gyro_accX,Gyro_accY,Gyro_accY;//存储积分后的的加速度
  13          float  Angle_accX,Angle_accY,Angle_accZ;//存储加速度计算出的角度
  14          long  LastTime=0,NowTime,TimeSpan;//用来对角速度积分的  
  15          
  16          /*==========================================================   
  17           *函数名称：InitMPU6050()
  18           *功    能：初始化MPU6050
  19           *入口参数：
  20           *出口参数：
  21           *说    明：
  22           *==========================================================*/
  23          void InitMPU6050()
  24          {
  25   1        Single_WriteI2C(PWR_MGMT_1, 0x00);  //解除休眠状态
  26   1        Single_WriteI2C(SMPLRT_DIV, 0x07);
  27   1        Single_WriteI2C(CONFIG, 0x06);
  28   1        Single_WriteI2C(GYRO_CONFIG, 0x18);
  29   1        Single_WriteI2C(ACCEL_CONFIG, 0x01);
  30   1      }
  31          
  32          /*==========================================================   
  33           *函数名称：GetData(unsigned char REG_Address)
  34           *功    能：对MPU6050数据进行合成
  35           *入口参数：REG_Address
  36           *出口参数：
  37           *说    明：
  38           *==========================================================*/
  39          int GetData(unsigned char REG_Address)
  40          {
  41   1        unsigned char H,L;
  42   1        H=Single_ReadI2C(REG_Address);
  43   1        L=Single_ReadI2C(REG_Address+1);
  44   1        return (H<<8)+L;   //合成数据
  45   1      }
  46          
  47          /*==========================================================   
  48           *函数名称：Get_Angle()
  49           *功    能：获取Y轴角度
  50           *入口参数：
  51           *出口参数：
  52           *说    明：采用一阶互补算法
  53           *==========================================================*/
  54          float Get_Angle()
C51 COMPILER V9.54   MPU6050                                                               07/01/2016 12:06:19 PAGE 2   

  55          {
  56   1          Angle_y=GetData(ACCEL_YOUT_H);
  57   1          Angle_z=GetData(ACCEL_ZOUT_H);
  58   1          Gyro_y=GetData(GYRO_YOUT_H);
  59   1          Gyro_z=GetData(GYRO_ZOUT_H);
  60   1        
  61   1      //对加速度进行量化，除灵敏度16384得出单位为g的加速度值 +-2g量程
  62   1          Angle_y=(Angle_y+65)/16384.00;//去除零点偏移
  63   1          Angle_z=(Angle_z+2700)/16384.00;//去除零点偏移
  64   1      //用加速度计算三个轴和水平面坐标系之间的夹角,角度较小时，x=sinx得到角度（弧度）, deg = rad*180/3.14
  65   1          Angle_accY= atan(Angle_y / Angle_z)*180/ pi;   //获得角度值，乘以-1得正
  66   1      //对角速度做量化 除以16.4得出单位为 °/s值 +-250°量程四个量程正负 250,500,1000,2000对应的GYRO_Sensitivity
             -分别为131,65.5,32.8,16.4
  67   1          Gyro_y=Gyro_y/131.0;
  68   1          Gyro_z=Gyro_z/131.0; 
  69   1      //===============以下是对时间进行积分处理================
  70   1          NowTime=RunningTime;//获取当前程序运行的毫秒数
  71   1          RunningTime=0;
  72   1          TimeSpan=NowTime-LastTime;//积分时间这样算不是很严谨
  73   1          LastTime=NowTime;
  74   1      //通过对角速度积分实现各个轴的角度测量，
  75   1          Gyro_accY=(Gyro_y-(Gy_offset))*TimeSpan/1000;
  76   1          Angle_accY = 0.8 * Angle_accY+ (1-0.8) * (Angle_accY + Gyro_accY);//一阶互补滤波
  77   1          return Angle_accY;
  78   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    550    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     32    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     26       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
