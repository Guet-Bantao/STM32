C51 COMPILER V9.54   MAIN                                                                  07/01/2016 12:06:19 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\MDK\keil\keilmdk\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*==========================================================
   2           * 程序名称：智能平衡杆系统
   3           * 开发人员：桂林电子科技大学 创新学院    班涛  郭绪亮
   4           * 开发 环境：keil5
   5           * 创建时间：2016/06/23
   6           * 修改时间：2016/06/30
   7           * 功能说明：按下按键13 完成基础要求一（45度）
   8           *           按下按键14 完成基础要求二(90度)
   9           *           按下按键11 完成基础要求三(0~180度)
  10           *           参考电压：7.6V
  11           *==========================================================*/
  12          
  13          //#include <stdio.h>   //Keil library 测试
  14          #include "mpu6050.h"
  15          #include "iic.h"
  16          #include "pwm.h"
  17          #include "pid.h"
  18          #include "12864.h"
  19          #include "keyboard.h"
  20          #include "show.h"
  21          //#include "uart.h"//测试
  22          
  23          //****************************************
  24          //定义类型及变量
  25          //****************************************
  26          bit  Flag_Set = 0; //12864界面切换标志位
  27          //bit  PIDRunFlag = 0;    //PID运行标志位，PID算法不是一直在运算。而是每隔一定时间，算一次。
  28          unsigned char xdata T0RH = 0;  //T0重载值的高字节
  29          unsigned char xdata T0RL = 0;  //T0重载值的低字节
  30          extern unsigned int  RunningTime;//计算时间
  31          extern float  Angle_accY;
  32          extern unsigned char xdata Flag_decade_unit;//设置角度十、个位标志位
  33          unsigned char pre_key = 255;
  34          unsigned char key;
  35          unsigned int Key_Counter = 0;
  36          int Point;//目标角度
  37          
  38          void  Deal_key();
  39          /*==========================================================   
  40           *函数名称：delay1ms(unsigned int k)
  41           *功    能：延时
  42           *入口参数：k
  43           *出口参数：
  44           *说    明：ms级延时，11.0592Mhz
  45           *==========================================================*/
  46          void delay1ms(unsigned int k) 
  47          {           
  48   1        unsigned int i,j;       
  49   1        for(i=0;i<k;i++)
  50   1        {     
  51   2          for(j=0;j<121;j++);
  52   2        }           
  53   1      }
  54          /*==========================================================   
C51 COMPILER V9.54   MAIN                                                                  07/01/2016 12:06:19 PAGE 2   

  55           *函数名称：ConfigTimer0(unsigned int ms)
  56           *功    能：配置定时器0
  57           *入口参数：ms
  58           *出口参数：
  59           *说    明：ms级定时器，11.0592Mhz
  60           *==========================================================*/
  61          void ConfigTimer0(unsigned int ms)
  62          {
  63   1          unsigned long tmp;  //临时变量
  64   1      
  65   1          tmp = 11059200 / 12;      //定时器计数频率
  66   1          tmp = (tmp * ms) / 1000;  //计算所需的计数值
  67   1          tmp = 65536 - tmp;        //计算定时器重载值
  68   1          tmp = tmp + 17;           //补偿中断响应延时造成的误差
  69   1          T0RH = (unsigned char)(tmp>>8);  //定时器重载值拆分为高低字节
  70   1          T0RL = (unsigned char)tmp;
  71   1          TMOD &= 0xF0;   //清零T0的控制位
  72   1          TMOD |= 0x01;   //配置T0为模式1
  73   1          TH0 = T0RH;     //加载T0重载值
  74   1          TL0 = T0RL;
  75   1          ET0 = 1;        //使能T0中断
  76   1          TR0 = 1;        //启动T0
  77   1      }
  78          
  79          /*==========================================================   
  80           *函数名称：Tain_key()
  81           *功    能：获取固定按键值
  82           *入口参数：
  83           *出口参数：
  84           *说    明：最开始没有按键按下时，key键值为255
  85           *==========================================================*/
  86          void Tain_key()
  87          {
  88   1        if(Key_Counter>=2)//消抖
  89   1            {
  90   2              Key_Counter=0;
  91   2              key=Get_key();
  92   2              if(key>15)
  93   2                key=pre_key;
  94   2              pre_key=key;
  95   2            }
  96   1      }
  97          
  98          //*********************************************************
  99          //主程序
 100          //*********************************************************
 101          void main()
 102          {
 103   1          OLED_Init(); //OLED初始化
 104   1          delay1ms(500);    //MPU6050上电延时   
 105   1          ConfigTimer0(1);
 106   1          init_pwm();
 107   1          InitMPU6050();  //初始化MPU6050
 108   1          delay1ms(300);
 109   1          EA=1;
 110   1          PID_Init();
 111   1          Draw_function();//显示初始界面
 112   1          while(1)
 113   1          {
 114   2            Angle_accY=Get_Angle();
 115   2            Angle_accY=Angle_accY+90.0;
 116   2            Obtain_Angle_accY(Angle_accY);//12864显示角度
C51 COMPILER V9.54   MAIN                                                                  07/01/2016 12:06:19 PAGE 3   

 117   2            Tain_key();//获取按键值
 118   2            Deal_key();//处理按键值
 119   2          }
 120   1      }
 121          
 122          /*==========================================================   
 123           *函数名称：Deal_key()
 124           *功    能：处理按键值
 125           *入口参数：
 126           *出口参数：
 127           *说    明：不同的键值执行相应的功能
 128           *==========================================================*/
 129          void  Deal_key()
 130          {
 131   1        if(Flag_Set == 0)//初始界面
 132   1        {
 133   2          if(key==13)//按13键完成基础部分1
 134   2          {
 135   3            Point=45;//基础要求1目标值  
 136   3            Mode_basc(Point);
 137   3          }
 138   2          else if(key==14)//按14键完成基础部分2
 139   2          {
 140   3            Point=90;//基础要求2目标值  
 141   3            Mode_basc(Point);
 142   3          }
 143   2          else if(key==11)//按11键设置角度并转到设置界面 基础部分3
 144   2          {
 145   3            OLED_CLS();//清屏
 146   3            Set_Watch();
 147   3            Flag_Set = 1;
 148   3            Flag_decade_unit=0;     
 149   3          }
 150   2          else if(key==15)//按15键启动电机
 151   2          {
 152   3            Mode_basc(Point);
 153   3          }
 154   2        }
 155   1      //********************************************************* 
 156   1        if(Flag_Set == 1)//设定角度界面
 157   1        {
 158   2          Set_Angle_accY(); 
 159   2          if(key==15)//按15键启动电机并回到初始界面
 160   2          {
 161   3            Flag_Set = 0;
 162   3            OLED_CLS();//清屏
 163   3            Draw_function();//显示
 164   3          }
 165   2        }
 166   1      }
 167          
 168          void InterruptTimer0() interrupt 1
 169          {
 170   1      //    static unsigned int PIDCounter = 0;  
 171   1          TH0 = T0RH;  //重新加载重载值
 172   1          TL0 = T0RL;
 173   1          RunningTime++;
 174   1          Key_Counter++;
 175   1      //    PIDCounter++;
 176   1      //  if(PIDCounter==2)
 177   1      //  {
 178   1      //    PIDRunFlag = 1;
C51 COMPILER V9.54   MAIN                                                                  07/01/2016 12:06:19 PAGE 4   

 179   1      //    PIDCounter = 0;
 180   1      //  }
 181   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    393    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
